[BLANK_AUDIO]
Welcome.
So, in this course we're going to be
learning about computer architecture.
And this course is an adaptation of a
course which I
teach at Princeton University called ELE,
for, for electrical engineering, 475.
And I'm David Wentzlaff.
I'm a professor here at Princeton.
And my background is mostly looking at
how to build mini core and multi-core
microprocessors.
And in the past, I've actually built two
of the world's fastest mini-core
microprocessors in industry, and before
that I
worked in academia, building many core
microprocessors.
So, about 15 years of processor design
experience.
In today's lecture we're going to be
talking
about introduction or some opening to what
is computer
architecture, why do you want to learn
computer
architecture, how it's different than
previous courses that
you might have taken so something like a
computer organization class or a logic
design course.
And then we'll talk about some content
today
which is looking at instruction set
architectures and
how a instruction set architecture or big
A
architecture is different than
implementation or micro architecture.
And why its a good idea
to split out these two ideas.
So let's take a step back and look at the
course administration
of this class, and how this class is going
to be organized.
So as I said, I'm David Wentzlaff.
this class is roughly going to be the
equivalent of two 80 minute lectures a
week.
So this is the same format that's used at
Princeton University for this course.
And it's,
we're going to try to segment into shorter
segments,
to sort of give you bite size nuggets
with questions and answers intermixed to
check your
understanding as the, as the video goes
on.
Two books that I wanted to talk about this
is the Computer
Architecture, a Quantitative Approach by
John Hennessy and David Patterson.
this is a very, very good book.
if you are going to be doing computer
architecture, I highly recommend it.
Or and it's a heavily, heavily, heavily
suggested book for this course.
I do want to point
out that there's a lot of different
versions of this book floating around.
We're going to be using the fifth edition,
and you should go get the fifth edition.
The fifth edition is very different than
the fourth edition.
it's updated as of 2012, so it's very
fresh.
And then, a auxiliary text, which is
useful for a portion of this class.
I'll mention it as the Shen-Lopasti book,
is the two authors.
Modern Processor Design and Fundamentals
of Super-scalar Processors.
the reason we're going to use this book or
the reason we're going to I,
I would recommend some readings out of
this book is that it has a
lot deeper coverage of super-scalar
processors than the computer architecture
book.
So this, this is a great book to be to
begin with, but it doesn't
cover how to build super-scalar processors
in great
depth, this book goes on to do that.
And that's something that we're going to
be talking a lot about in this course.
A lot of the content of
computer organization or, or traditional
computer organization
class, I'm going to repeat.
In the first three lectures of this
course, or
the first three and a half lectures of
this course.
And the reason for this is because I teach
everything from first principles.
And once you get everyone on the same
page, but
it's, we're going to go very, very fast
through that material.
So, if you've not had a computer
organization
class, it may be possible to take this
class,
but I highly recommend taking a computer
organization class
before this class, because this is the
second class
in sort of a computer architecture series,
where you'd have computer organization and
computer architecture.
And we really do rely on the pre-reqs.
But, if you are
watching the first three lectures and say,
I know all
of this, yes, that is correct, you should
know all this.
If you don't know all this then you should
probably go back and retake
computer organization or take a computer
organization
class but don't drop the class if you
take the first three lectures and say, oh,
I know all this and just,
just leave at that point because we're
just going to breeze through that content
very fast.
As building from first principles.
[BLANK_AUDIO]

